An enumerated string contains a value 'InjectedError' that is neither snake_case nor SCREAMING_SNAKE_CASE:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: None,
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        String(
            StringType {
                format: Empty,
                pattern: None,
                enumeration: [
                    Some(
                        "InjectedError",
                    ),
                ],
                min_length: None,
                max_length: None,
            },
        ),
    ),
}
Add #[serde(rename = "injected_error")] to the variant or #[serde(rename_all = "snake_case")] to the enum.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'ActionFailed' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Action failed due to a consumer-specific error",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "ActionFailed": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                Object(
                                    ObjectType {
                                        properties: {
                                            "source_error": Item(
                                                Schema {
                                                    schema_data: SchemaData {
                                                        nullable: false,
                                                        read_only: false,
                                                        write_only: false,
                                                        deprecated: false,
                                                        external_docs: None,
                                                        example: None,
                                                        title: None,
                                                        description: None,
                                                        discriminator: None,
                                                        default: None,
                                                        extensions: {},
                                                    },
                                                    schema_kind: Any(
                                                        AnySchema {
                                                            typ: None,
                                                            pattern: None,
                                                            multiple_of: None,
                                                            exclusive_minimum: None,
                                                            exclusive_maximum: None,
                                                            minimum: None,
                                                            maximum: None,
                                                            properties: {},
                                                            required: [],
                                                            additional_properties: None,
                                                            min_properties: None,
                                                            max_properties: None,
                                                            items: None,
                                                            min_items: None,
                                                            max_items: None,
                                                            unique_items: None,
                                                            enumeration: [],
                                                            format: None,
                                                            min_length: None,
                                                            max_length: None,
                                                            one_of: [],
                                                            all_of: [],
                                                            any_of: [],
                                                            not: None,
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                        required: [
                                            "source_error",
                                        ],
                                        additional_properties: None,
                                        min_properties: None,
                                        max_properties: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "ActionFailed",
                ],
                additional_properties: Some(
                    Any(
                        false,
                    ),
                ),
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "action_failed")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'DeserializeFailed' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "The framework failed to deserialize the saga parameters, an action's successful result, or an action's error.",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "DeserializeFailed": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                Object(
                                    ObjectType {
                                        properties: {
                                            "message": Item(
                                                Schema {
                                                    schema_data: SchemaData {
                                                        nullable: false,
                                                        read_only: false,
                                                        write_only: false,
                                                        deprecated: false,
                                                        external_docs: None,
                                                        example: None,
                                                        title: None,
                                                        description: None,
                                                        discriminator: None,
                                                        default: None,
                                                        extensions: {},
                                                    },
                                                    schema_kind: Type(
                                                        String(
                                                            StringType {
                                                                format: Empty,
                                                                pattern: None,
                                                                enumeration: [],
                                                                min_length: None,
                                                                max_length: None,
                                                            },
                                                        ),
                                                    ),
                                                },
                                            ),
                                        },
                                        required: [
                                            "message",
                                        ],
                                        additional_properties: None,
                                        min_properties: None,
                                        max_properties: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "DeserializeFailed",
                ],
                additional_properties: Some(
                    Any(
                        false,
                    ),
                ),
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "deserialize_failed")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'SerializeFailed' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "The framework failed to serialize the saga parameters, an action's successful result, or an action's error.",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "SerializeFailed": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                Object(
                                    ObjectType {
                                        properties: {
                                            "message": Item(
                                                Schema {
                                                    schema_data: SchemaData {
                                                        nullable: false,
                                                        read_only: false,
                                                        write_only: false,
                                                        deprecated: false,
                                                        external_docs: None,
                                                        example: None,
                                                        title: None,
                                                        description: None,
                                                        discriminator: None,
                                                        default: None,
                                                        extensions: {},
                                                    },
                                                    schema_kind: Type(
                                                        String(
                                                            StringType {
                                                                format: Empty,
                                                                pattern: None,
                                                                enumeration: [],
                                                                min_length: None,
                                                                max_length: None,
                                                            },
                                                        ),
                                                    ),
                                                },
                                            ),
                                        },
                                        required: [
                                            "message",
                                        ],
                                        additional_properties: None,
                                        min_properties: None,
                                        max_properties: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "SerializeFailed",
                ],
                additional_properties: Some(
                    Any(
                        false,
                    ),
                ),
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "serialize_failed")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'SubsagaCreateFailed' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "The framework failed to create the requested subsaga",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "SubsagaCreateFailed": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                Object(
                                    ObjectType {
                                        properties: {
                                            "message": Item(
                                                Schema {
                                                    schema_data: SchemaData {
                                                        nullable: false,
                                                        read_only: false,
                                                        write_only: false,
                                                        deprecated: false,
                                                        external_docs: None,
                                                        example: None,
                                                        title: None,
                                                        description: None,
                                                        discriminator: None,
                                                        default: None,
                                                        extensions: {},
                                                    },
                                                    schema_kind: Type(
                                                        String(
                                                            StringType {
                                                                format: Empty,
                                                                pattern: None,
                                                                enumeration: [],
                                                                min_length: None,
                                                                max_length: None,
                                                            },
                                                        ),
                                                    ),
                                                },
                                            ),
                                        },
                                        required: [
                                            "message",
                                        ],
                                        additional_properties: None,
                                        min_properties: None,
                                        max_properties: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "SubsagaCreateFailed",
                ],
                additional_properties: Some(
                    Any(
                        false,
                    ),
                ),
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "subsaga_create_failed")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

Problem with type ActionError: Mismatched types between subschemas; this is often due to enums with different data payloads and can be resolved using serde adjacent tagging.
this schema's type
String(
    StringType {
        format: Empty,
        pattern: None,
        enumeration: [
            Some(
                "InjectedError",
            ),
        ],
        min_length: None,
        max_length: None,
    },
)
differs from this
Object(
    ObjectType {
        properties: {
            "ActionFailed": Item(
                Schema {
                    schema_data: SchemaData {
                        nullable: false,
                        read_only: false,
                        write_only: false,
                        deprecated: false,
                        external_docs: None,
                        example: None,
                        title: None,
                        description: None,
                        discriminator: None,
                        default: None,
                        extensions: {},
                    },
                    schema_kind: Type(
                        Object(
                            ObjectType {
                                properties: {
                                    "source_error": Item(
                                        Schema {
                                            schema_data: SchemaData {
                                                nullable: false,
                                                read_only: false,
                                                write_only: false,
                                                deprecated: false,
                                                external_docs: None,
                                                example: None,
                                                title: None,
                                                description: None,
                                                discriminator: None,
                                                default: None,
                                                extensions: {},
                                            },
                                            schema_kind: Any(
                                                AnySchema {
                                                    typ: None,
                                                    pattern: None,
                                                    multiple_of: None,
                                                    exclusive_minimum: None,
                                                    exclusive_maximum: None,
                                                    minimum: None,
                                                    maximum: None,
                                                    properties: {},
                                                    required: [],
                                                    additional_properties: None,
                                                    min_properties: None,
                                                    max_properties: None,
                                                    items: None,
                                                    min_items: None,
                                                    max_items: None,
                                                    unique_items: None,
                                                    enumeration: [],
                                                    format: None,
                                                    min_length: None,
                                                    max_length: None,
                                                    one_of: [],
                                                    all_of: [],
                                                    any_of: [],
                                                    not: None,
                                                },
                                            ),
                                        },
                                    ),
                                },
                                required: [
                                    "source_error",
                                ],
                                additional_properties: None,
                                min_properties: None,
                                max_properties: None,
                            },
                        ),
                    ),
                },
            ),
        },
        required: [
            "ActionFailed",
        ],
        additional_properties: Some(
            Any(
                false,
            ),
        ),
        min_properties: None,
        max_properties: None,
    },
)

For more info, see https://github.com/oxidecomputer/openapi-lint#type-mismatch

An object contains a property 'diskId' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Describes a Disk's attachment to an Instance",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "diskId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "diskName": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "diskState": Reference {
                        reference: "#/components/schemas/DiskState",
                    },
                    "instanceId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "diskId",
                    "diskName",
                    "diskState",
                    "instanceId",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "disk_id")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'diskName' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Describes a Disk's attachment to an Instance",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "diskId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "diskName": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "diskState": Reference {
                        reference: "#/components/schemas/DiskState",
                    },
                    "instanceId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "diskId",
                    "diskName",
                    "diskState",
                    "instanceId",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "disk_name")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'diskState' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Describes a Disk's attachment to an Instance",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "diskId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "diskName": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "diskState": Reference {
                        reference: "#/components/schemas/DiskState",
                    },
                    "instanceId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "diskId",
                    "diskName",
                    "diskState",
                    "instanceId",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "disk_state")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'instanceId' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Describes a Disk's attachment to an Instance",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "diskId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "diskName": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "diskState": Reference {
                        reference: "#/components/schemas/DiskState",
                    },
                    "instanceId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "diskId",
                    "diskName",
                    "diskState",
                    "instanceId",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "instance_id")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'snapshotId' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Create-time parameters for an [`Disk`]",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "description": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "name": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "size": Reference {
                        reference: "#/components/schemas/ByteCount",
                    },
                    "snapshotId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "id for snapshot from which the Disk should be created, if any",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "description",
                    "name",
                    "size",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "snapshot_id")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

Problem with type DiskState: Mismatched types between subschemas; this is often due to enums with different data payloads and can be resolved using serde adjacent tagging.
this schema's type
String(
    StringType {
        format: Empty,
        pattern: None,
        enumeration: [
            Some(
                "creating",
            ),
            Some(
                "detached",
            ),
            Some(
                "destroyed",
            ),
            Some(
                "faulted",
            ),
        ],
        min_length: None,
        max_length: None,
    },
)
differs from this
Object(
    ObjectType {
        properties: {
            "attaching": Item(
                Schema {
                    schema_data: SchemaData {
                        nullable: false,
                        read_only: false,
                        write_only: false,
                        deprecated: false,
                        external_docs: None,
                        example: None,
                        title: None,
                        description: None,
                        discriminator: None,
                        default: None,
                        extensions: {},
                    },
                    schema_kind: Type(
                        String(
                            StringType {
                                format: Unknown(
                                    "uuid",
                                ),
                                pattern: None,
                                enumeration: [],
                                min_length: None,
                                max_length: None,
                            },
                        ),
                    ),
                },
            ),
        },
        required: [
            "attaching",
        ],
        additional_properties: Some(
            Any(
                false,
            ),
        ),
        min_properties: None,
        max_properties: None,
    },
)

For more info, see https://github.com/oxidecomputer/openapi-lint#type-mismatch

An object contains a property 'devicePath' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Client view of an [`Disk`]",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "description": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "human-readable free-form text about a resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "devicePath": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "id": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "unique, immutable, system-controlled identifier for each resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "name": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "projectId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "size": Reference {
                        reference: "#/components/schemas/ByteCount",
                    },
                    "snapshotId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "state": Reference {
                        reference: "#/components/schemas/DiskState",
                    },
                    "timeCreated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was created",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeModified": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was last modified",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "description",
                    "devicePath",
                    "id",
                    "name",
                    "projectId",
                    "size",
                    "state",
                    "timeCreated",
                    "timeModified",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "device_path")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'projectId' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Client view of an [`Disk`]",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "description": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "human-readable free-form text about a resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "devicePath": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "id": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "unique, immutable, system-controlled identifier for each resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "name": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "projectId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "size": Reference {
                        reference: "#/components/schemas/ByteCount",
                    },
                    "snapshotId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "state": Reference {
                        reference: "#/components/schemas/DiskState",
                    },
                    "timeCreated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was created",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeModified": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was last modified",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "description",
                    "devicePath",
                    "id",
                    "name",
                    "projectId",
                    "size",
                    "state",
                    "timeCreated",
                    "timeModified",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "project_id")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'snapshotId' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Client view of an [`Disk`]",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "description": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "human-readable free-form text about a resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "devicePath": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "id": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "unique, immutable, system-controlled identifier for each resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "name": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "projectId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "size": Reference {
                        reference: "#/components/schemas/ByteCount",
                    },
                    "snapshotId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "state": Reference {
                        reference: "#/components/schemas/DiskState",
                    },
                    "timeCreated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was created",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeModified": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was last modified",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "description",
                    "devicePath",
                    "id",
                    "name",
                    "projectId",
                    "size",
                    "state",
                    "timeCreated",
                    "timeModified",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "snapshot_id")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'timeCreated' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Client view of an [`Disk`]",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "description": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "human-readable free-form text about a resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "devicePath": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "id": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "unique, immutable, system-controlled identifier for each resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "name": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "projectId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "size": Reference {
                        reference: "#/components/schemas/ByteCount",
                    },
                    "snapshotId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "state": Reference {
                        reference: "#/components/schemas/DiskState",
                    },
                    "timeCreated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was created",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeModified": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was last modified",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "description",
                    "devicePath",
                    "id",
                    "name",
                    "projectId",
                    "size",
                    "state",
                    "timeCreated",
                    "timeModified",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "time_created")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'timeModified' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Client view of an [`Disk`]",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "description": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "human-readable free-form text about a resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "devicePath": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "id": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "unique, immutable, system-controlled identifier for each resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "name": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "projectId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "size": Reference {
                        reference: "#/components/schemas/ByteCount",
                    },
                    "snapshotId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "state": Reference {
                        reference: "#/components/schemas/DiskState",
                    },
                    "timeCreated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was created",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeModified": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was last modified",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "description",
                    "devicePath",
                    "id",
                    "name",
                    "projectId",
                    "size",
                    "state",
                    "timeCreated",
                    "timeModified",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "time_modified")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'timeCreated' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Identity-related metadata that's included in nearly all public API objects",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "description": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "human-readable free-form text about a resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "id": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "unique, immutable, system-controlled identifier for each resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "name": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "timeCreated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was created",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeModified": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was last modified",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "description",
                    "id",
                    "name",
                    "timeCreated",
                    "timeModified",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "time_created")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'timeModified' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Identity-related metadata that's included in nearly all public API objects",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "description": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "human-readable free-form text about a resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "id": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "unique, immutable, system-controlled identifier for each resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "name": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "timeCreated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was created",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeModified": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was last modified",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "description",
                    "id",
                    "name",
                    "timeCreated",
                    "timeModified",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "time_modified")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'projectId' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Client view of an [`Instance`]",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "description": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "human-readable free-form text about a resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "hostname": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "RFC1035-compliant hostname for the Instance.",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "id": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "unique, immutable, system-controlled identifier for each resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "memory": Reference {
                        reference: "#/components/schemas/ByteCount",
                    },
                    "name": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "ncpus": Reference {
                        reference: "#/components/schemas/InstanceCpuCount",
                    },
                    "projectId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "id for the project containing this Instance",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "runState": Reference {
                        reference: "#/components/schemas/InstanceState",
                    },
                    "timeCreated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was created",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeModified": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was last modified",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeRunStateUpdated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "description",
                    "hostname",
                    "id",
                    "memory",
                    "name",
                    "ncpus",
                    "projectId",
                    "runState",
                    "timeCreated",
                    "timeModified",
                    "timeRunStateUpdated",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "project_id")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'runState' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Client view of an [`Instance`]",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "description": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "human-readable free-form text about a resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "hostname": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "RFC1035-compliant hostname for the Instance.",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "id": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "unique, immutable, system-controlled identifier for each resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "memory": Reference {
                        reference: "#/components/schemas/ByteCount",
                    },
                    "name": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "ncpus": Reference {
                        reference: "#/components/schemas/InstanceCpuCount",
                    },
                    "projectId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "id for the project containing this Instance",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "runState": Reference {
                        reference: "#/components/schemas/InstanceState",
                    },
                    "timeCreated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was created",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeModified": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was last modified",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeRunStateUpdated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "description",
                    "hostname",
                    "id",
                    "memory",
                    "name",
                    "ncpus",
                    "projectId",
                    "runState",
                    "timeCreated",
                    "timeModified",
                    "timeRunStateUpdated",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "run_state")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'timeCreated' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Client view of an [`Instance`]",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "description": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "human-readable free-form text about a resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "hostname": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "RFC1035-compliant hostname for the Instance.",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "id": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "unique, immutable, system-controlled identifier for each resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "memory": Reference {
                        reference: "#/components/schemas/ByteCount",
                    },
                    "name": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "ncpus": Reference {
                        reference: "#/components/schemas/InstanceCpuCount",
                    },
                    "projectId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "id for the project containing this Instance",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "runState": Reference {
                        reference: "#/components/schemas/InstanceState",
                    },
                    "timeCreated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was created",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeModified": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was last modified",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeRunStateUpdated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "description",
                    "hostname",
                    "id",
                    "memory",
                    "name",
                    "ncpus",
                    "projectId",
                    "runState",
                    "timeCreated",
                    "timeModified",
                    "timeRunStateUpdated",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "time_created")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'timeModified' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Client view of an [`Instance`]",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "description": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "human-readable free-form text about a resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "hostname": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "RFC1035-compliant hostname for the Instance.",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "id": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "unique, immutable, system-controlled identifier for each resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "memory": Reference {
                        reference: "#/components/schemas/ByteCount",
                    },
                    "name": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "ncpus": Reference {
                        reference: "#/components/schemas/InstanceCpuCount",
                    },
                    "projectId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "id for the project containing this Instance",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "runState": Reference {
                        reference: "#/components/schemas/InstanceState",
                    },
                    "timeCreated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was created",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeModified": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was last modified",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeRunStateUpdated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "description",
                    "hostname",
                    "id",
                    "memory",
                    "name",
                    "ncpus",
                    "projectId",
                    "runState",
                    "timeCreated",
                    "timeModified",
                    "timeRunStateUpdated",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "time_modified")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'timeRunStateUpdated' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Client view of an [`Instance`]",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "description": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "human-readable free-form text about a resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "hostname": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "RFC1035-compliant hostname for the Instance.",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "id": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "unique, immutable, system-controlled identifier for each resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "memory": Reference {
                        reference: "#/components/schemas/ByteCount",
                    },
                    "name": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "ncpus": Reference {
                        reference: "#/components/schemas/InstanceCpuCount",
                    },
                    "projectId": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "id for the project containing this Instance",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "runState": Reference {
                        reference: "#/components/schemas/InstanceState",
                    },
                    "timeCreated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was created",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeModified": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was last modified",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeRunStateUpdated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "description",
                    "hostname",
                    "id",
                    "memory",
                    "name",
                    "ncpus",
                    "projectId",
                    "runState",
                    "timeCreated",
                    "timeModified",
                    "timeRunStateUpdated",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "time_run_state_updated")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'timeCreated' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Client view of an [`Project`]",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "description": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "human-readable free-form text about a resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "id": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "unique, immutable, system-controlled identifier for each resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "name": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "timeCreated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was created",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeModified": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was last modified",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "description",
                    "id",
                    "name",
                    "timeCreated",
                    "timeModified",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "time_created")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'timeModified' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Client view of an [`Project`]",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "description": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "human-readable free-form text about a resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "id": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "unique, immutable, system-controlled identifier for each resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "name": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "timeCreated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was created",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeModified": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was last modified",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "description",
                    "id",
                    "name",
                    "timeCreated",
                    "timeModified",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "time_modified")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'errorInfo' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: None,
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "errorInfo": Reference {
                        reference: "#/components/schemas/ActionError",
                    },
                    "errorNodeName": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "failed": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                Boolean,
                            ),
                        },
                    ),
                },
                required: [
                    "failed",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "error_info")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'errorNodeName' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: None,
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "errorInfo": Reference {
                        reference: "#/components/schemas/ActionError",
                    },
                    "errorNodeName": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "failed": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                Boolean,
                            ),
                        },
                    ),
                },
                required: [
                    "failed",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "error_node_name")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

Problem with type SagaStateView: Mismatched types between subschemas; this is often due to enums with different data payloads and can be resolved using serde adjacent tagging.
this schema's type
String(
    StringType {
        format: Empty,
        pattern: None,
        enumeration: [
            Some(
                "running",
            ),
        ],
        min_length: None,
        max_length: None,
    },
)
differs from this
Object(
    ObjectType {
        properties: {
            "done": Item(
                Schema {
                    schema_data: SchemaData {
                        nullable: false,
                        read_only: false,
                        write_only: false,
                        deprecated: false,
                        external_docs: None,
                        example: None,
                        title: None,
                        description: None,
                        discriminator: None,
                        default: None,
                        extensions: {},
                    },
                    schema_kind: Type(
                        Object(
                            ObjectType {
                                properties: {
                                    "errorInfo": Reference {
                                        reference: "#/components/schemas/ActionError",
                                    },
                                    "errorNodeName": Item(
                                        Schema {
                                            schema_data: SchemaData {
                                                nullable: false,
                                                read_only: false,
                                                write_only: false,
                                                deprecated: false,
                                                external_docs: None,
                                                example: None,
                                                title: None,
                                                description: None,
                                                discriminator: None,
                                                default: None,
                                                extensions: {},
                                            },
                                            schema_kind: Type(
                                                String(
                                                    StringType {
                                                        format: Empty,
                                                        pattern: None,
                                                        enumeration: [],
                                                        min_length: None,
                                                        max_length: None,
                                                    },
                                                ),
                                            ),
                                        },
                                    ),
                                    "failed": Item(
                                        Schema {
                                            schema_data: SchemaData {
                                                nullable: false,
                                                read_only: false,
                                                write_only: false,
                                                deprecated: false,
                                                external_docs: None,
                                                example: None,
                                                title: None,
                                                description: None,
                                                discriminator: None,
                                                default: None,
                                                extensions: {},
                                            },
                                            schema_kind: Type(
                                                Boolean,
                                            ),
                                        },
                                    ),
                                },
                                required: [
                                    "failed",
                                ],
                                additional_properties: None,
                                min_properties: None,
                                max_properties: None,
                            },
                        ),
                    ),
                },
            ),
        },
        required: [
            "done",
        ],
        additional_properties: Some(
            Any(
                false,
            ),
        ),
        min_properties: None,
        max_properties: None,
    },
)

For more info, see https://github.com/oxidecomputer/openapi-lint#type-mismatch

An object contains a property 'serviceAddress' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Client view of an [`Sled`]",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "description": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "human-readable free-form text about a resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "id": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "unique, immutable, system-controlled identifier for each resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "name": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "serviceAddress": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeCreated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was created",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeModified": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was last modified",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "description",
                    "id",
                    "name",
                    "serviceAddress",
                    "timeCreated",
                    "timeModified",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "service_address")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'timeCreated' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Client view of an [`Sled`]",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "description": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "human-readable free-form text about a resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "id": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "unique, immutable, system-controlled identifier for each resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "name": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "serviceAddress": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeCreated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was created",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeModified": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was last modified",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "description",
                    "id",
                    "name",
                    "serviceAddress",
                    "timeCreated",
                    "timeModified",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "time_created")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An object contains a property 'timeModified' which is not snake_case:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Client view of an [`Sled`]",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        Object(
            ObjectType {
                properties: {
                    "description": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "human-readable free-form text about a resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "id": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "unique, immutable, system-controlled identifier for each resource",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Unknown(
                                            "uuid",
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "name": Reference {
                        reference: "#/components/schemas/Name",
                    },
                    "serviceAddress": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: None,
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Empty,
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeCreated": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was created",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                    "timeModified": Item(
                        Schema {
                            schema_data: SchemaData {
                                nullable: false,
                                read_only: false,
                                write_only: false,
                                deprecated: false,
                                external_docs: None,
                                example: None,
                                title: None,
                                description: Some(
                                    "timestamp when this resource was last modified",
                                ),
                                discriminator: None,
                                default: None,
                                extensions: {},
                            },
                            schema_kind: Type(
                                String(
                                    StringType {
                                        format: Item(
                                            DateTime,
                                        ),
                                        pattern: None,
                                        enumeration: [],
                                        min_length: None,
                                        max_length: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                required: [
                    "description",
                    "id",
                    "name",
                    "serviceAddress",
                    "timeCreated",
                    "timeModified",
                ],
                additional_properties: None,
                min_properties: None,
                max_properties: None,
            },
        ),
    ),
}
Add #[serde(rename = "time_modified")] to the member or #[serde(rename_all = "snake_case")] to the struct.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An enumerated string contains a value 'id-ascending' that is neither snake_case nor SCREAMING_SNAKE_CASE:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Supported set of sort modes for scanning by id only.\n\nCurrently, we only support scanning in ascending order.",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        String(
            StringType {
                format: Empty,
                pattern: None,
                enumeration: [
                    Some(
                        "id-ascending",
                    ),
                ],
                min_length: None,
                max_length: None,
            },
        ),
    ),
}
Add #[serde(rename = "id_ascending")] to the variant or #[serde(rename_all = "snake_case")] to the enum.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An enumerated string contains a value 'id-ascending' that is neither snake_case nor SCREAMING_SNAKE_CASE:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Supported set of sort modes for scanning by id only.\n\nCurrently, we only support scanning in ascending order.",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        String(
            StringType {
                format: Empty,
                pattern: None,
                enumeration: [
                    Some(
                        "id-ascending",
                    ),
                ],
                min_length: None,
                max_length: None,
            },
        ),
    ),
}
Add #[serde(rename = "id_ascending")] to the variant or #[serde(rename_all = "snake_case")] to the enum.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An enumerated string contains a value 'name-ascending' that is neither snake_case nor SCREAMING_SNAKE_CASE:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Supported set of sort modes for scanning by name or id",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        String(
            StringType {
                format: Empty,
                pattern: None,
                enumeration: [
                    Some(
                        "name-ascending",
                    ),
                    Some(
                        "name-descending",
                    ),
                    Some(
                        "id-ascending",
                    ),
                ],
                min_length: None,
                max_length: None,
            },
        ),
    ),
}
Add #[serde(rename = "name_ascending")] to the variant or #[serde(rename_all = "snake_case")] to the enum.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An enumerated string contains a value 'name-descending' that is neither snake_case nor SCREAMING_SNAKE_CASE:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Supported set of sort modes for scanning by name or id",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        String(
            StringType {
                format: Empty,
                pattern: None,
                enumeration: [
                    Some(
                        "name-ascending",
                    ),
                    Some(
                        "name-descending",
                    ),
                    Some(
                        "id-ascending",
                    ),
                ],
                min_length: None,
                max_length: None,
            },
        ),
    ),
}
Add #[serde(rename = "name_descending")] to the variant or #[serde(rename_all = "snake_case")] to the enum.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An enumerated string contains a value 'id-ascending' that is neither snake_case nor SCREAMING_SNAKE_CASE:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Supported set of sort modes for scanning by name or id",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        String(
            StringType {
                format: Empty,
                pattern: None,
                enumeration: [
                    Some(
                        "name-ascending",
                    ),
                    Some(
                        "name-descending",
                    ),
                    Some(
                        "id-ascending",
                    ),
                ],
                min_length: None,
                max_length: None,
            },
        ),
    ),
}
Add #[serde(rename = "id_ascending")] to the variant or #[serde(rename_all = "snake_case")] to the enum.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

An enumerated string contains a value 'name-ascending' that is neither snake_case nor SCREAMING_SNAKE_CASE:
Schema {
    schema_data: SchemaData {
        nullable: false,
        read_only: false,
        write_only: false,
        deprecated: false,
        external_docs: None,
        example: None,
        title: None,
        description: Some(
            "Supported set of sort modes for scanning by name only\n\nCurrently, we only support scanning in ascending order.",
        ),
        discriminator: None,
        default: None,
        extensions: {},
    },
    schema_kind: Type(
        String(
            StringType {
                format: Empty,
                pattern: None,
                enumeration: [
                    Some(
                        "name-ascending",
                    ),
                ],
                min_length: None,
                max_length: None,
            },
        ),
    ),
}
Add #[serde(rename = "name_ascending")] to the variant or #[serde(rename_all = "snake_case")] to the enum.
For more info see https://github.com/oxidecomputer/openapi-lint#naming

The operation for /projects/{project_name}/instances post is named "projectInstancesPost" which is not snake_case
For more info, see https://github.com/oxidecomputer/openapi-lint#naming

The type "fake_id_sort_mode" has a name that is not PascalCase; to rename it add #[serde(rename = "FakeIdSortMode")]
For more info, see https://github.com/oxidecomputer/openapi-lint#naming